<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - RamaLabs</title>
        <link>https://ramalabs.my.id/posts/</link>
        <description>All Posts | RamaLabs</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hidayah.ramadlana@gmail.com (Hidayah Ramadlana)</managingEditor>
            <webMaster>hidayah.ramadlana@gmail.com (Hidayah Ramadlana)</webMaster><lastBuildDate>Thu, 16 Feb 2023 10:18:49 &#43;0700</lastBuildDate><atom:link href="https://ramalabs.my.id/posts/" rel="self" type="application/rss+xml" /><item>
    <title>How to Create Custom Service Systemd on Linux</title>
    <link>https://ramalabs.my.id/how-to-create-custom-service-systemd/</link>
    <pubDate>Thu, 16 Feb 2023 10:18:49 &#43;0700</pubDate>
    <author>Hidayah Ramadlana</author>
    <guid>https://ramalabs.my.id/how-to-create-custom-service-systemd/</guid>
    <description><![CDATA[Backgound: As developers, we often want to create an service system that can run on background and then launch a service every system startup. These sevice can be anything, maybe you have python scripts, bash scripts, or node js script, or maybe like this example we create a custome service for Metabase (https://www.metabase.com/start/).
Metabase can be launched from user terminal by typing java -jar metabase.jar but every user logout or close the terminal metabase will stopped immediately.]]></description>
</item>
<item>
    <title>Python get started for Network Engineer</title>
    <link>https://ramalabs.my.id/python-cheatsheet/</link>
    <pubDate>Thu, 16 Feb 2023 05:42:43 &#43;0700</pubDate>
    <author>Hidayah Ramadlana</author>
    <guid>https://ramalabs.my.id/python-cheatsheet/</guid>
    <description><![CDATA[Init sudo apt install python3-pip python3 -m venv env source bin/activate requirements.tx 1 2 3 4 5 # create pip3 freeze --local &gt; requirements.txt # load pip3 install -r requirements.txt Snippets: SSH - Paramiko 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import re import paramiko import time # \ndisplay ip interface brief | no-more iplist = [&#39;172.16.0.21&#39;, &#39;172.16.0.25&#39;, &#39;172.16.0.22&#39;] for host in iplist: cmd = &#39;display int desc | no-more\ndisplay ip int br | no-more&#39; promt = &#39;N&#39; ssh_client = paramiko.]]></description>
</item>
</channel>
</rss>
